TODO:
-----

ergibt sich aus Neuerungen:
- die config.properties in den Paketen können eigentlich weg
- die Servlet-Klassen brauchen connectDatabase() nicht mehr zu implementieren
- abgeleitete ActionDispatcher-Klassen nicht mehr nötig



nötig:
- BayenWeb
  - Aktualisierung statt neuimport
  - Filter (z.B. nach Aussendienstlern)
  - Telefonnummern in Liste für Günther
  - Bei der Anlage neuer Datensätze haben Verweisfelder immer Index 1

wünschenswert:
- depotmanager
  - YahooRetriever ohne deprecated APIs
- interne Verbesserungen
  - Anpassung der Doku README und INSTALL
  - stärkere Angleichung an JavaBeans, um andere Datenquellen auch nutzen zu können
  - Ein überladenes Template sollte sein Original laden können
  - Wechsel (und Neuinitialisierung) der Datenbank möglich machen
  - evtl. Session-Einstellungen für Theme, Filter, etc.
  - Connection Pool
  - System für Formulare, Validierung, etc.
- Benutzersensitivität
  - Anzeige des Benutzers
  - logout, d.h. Formular-Login
  - Themes abhängig vom Benutzer / der Rolle
  - Logging der Zugriffe nach Benutzer (evtl. in Datenbank)
- Benutzerfreundlichkeit
  - größere Icons (Vergleich z.B. mit Ausgabe ohne stylesheet)
  - Suchformular
  - verbesserte Navigation
  - Ausgabe von Auszugsdaten in schönerem Zahlenformat
  - Anker zum Aufruf bestimmter Teile der Seiten
  - Focus wieder automatisch setzen (im Template oder im Controller?!?)
  - kein Javascript in Günther-Template
  - sinnvolle Ausgabe, wenn Datenbank nicht initialisiert werden kann
  - Action und View für Datensicherung
- neue Funktionen
  - Filter in Liste
  - Umgang mit fehlender oder nicht konfigurierter Datenbank
  - Wechsel der Datenbankverbindung
  - Bilder in der Datenbank
- weitere Applikationen, z.B.:
  - Kalender
  - Adressbuch
  - Event-Manager
  - OP-Manager
- database-Klassen
  - eine zentrale Properties-Datei für eine Datenbank ermöglichen
  - benutzte Properties auf Methoden abbilden
  - Interfaces erstellen
  - API besser standardisieren: get/set, toString, etc.

nicht wirklich nötig:
- Paging bei der Listenanzeige
- Versionsnummer nicht in Webadresse benutzen?
- Beschleunigung
- Sortieren nach Fremdschlüsseln



erledigt:
- Banking-TODOs in eigene Datei innerhalb dieses Projektes ausgelagert
- eigenes Projekt für Banking begonnen
- WebDBDatabase-Klasse unnötig gemacht und gelöscht
- Datenbank-Anbindung geändert
- Database läuft intern jetzt mit Datasource
Version 1.6, (DepotManager 1.0, FreibierDB 1.1)
- Bugmeldung an Freemarker wg. ClassTemplateLoader
- Fix für Bug im TemplateLoader von Freemarker
- Kopieren des "web"-Verzeichnisses nach /doku/examples
- Anpassung des build-Skripts
- Umlegen der Bibliotheken nach /lib bzw. /lib/compile
- Umbenennung des Projektes von "WebDatabase" (war mir zu allgemein) in "FreibierWeb"
- Abspaltung der einzelnen Applikationen von der Grund-Bibliothek
- Beispiel-Projektverzeichnis "Example" in "/doku" bzw. "/dist" erstellen
- Minimale Beispiel-Applikation "testapp" erstellen
- Alle Images in das Templateverzeichnis und Action zum Laden erstellt
- stylesheet.css in Template-Verzeichnis auslagern
- package.html für Depotmanager-Paket
- die config.properties in den Paketen können eigentlich weg
- die Servlet-Klassen brauchen connectDatabase() nicht mehr zu implementieren
- abgeleitete ActionDispatcher-Klassen nicht mehr nötig
- index.ftl in Template-Verzeichnis erstellen
- Redirect direkt im @page-Makro ermöglicht
- Links zu Infoseiten im Web
- Kursdaten nur aktuelle holen
- Sortierung der Analyse nach ISIN
- stylesheet für Ausdruck verbessert
- depotmanager-Grundlage neu mit HOWTO zur Erstellung neuer Applikationen
- neues build-Skript (identisch für alle meine aktuellen Projekte)
- Das build-Skript findet die libraries nun selber
- Abspaltung von der Datenbankklassen als Projekt FreibierDB
- war bereits erledigt: Euro-Zeichen eingeben und ausgeben (und in PHPMyAdmin auch)
Version 1.5
- Codierung von "?" bei der Erzeugung von redirect-URL nötig
- Bei Neuanlage von Datensätzen nicht direkt eine Vorlage erstellen
- bei Suchfunktion prüfen, ob Vorlagenkorb existiert
- Fehler bei der Neuanlage von Transaktionen wg. Suche nach Vorlagen
Version 1.5rc
- Datenbank-Parameter auch in die neuen Properties
- Im Transaktions-editform Button für Suchfunktion nach unten
- Empfängerdaten aus Vorlagen suchen
- Empfängerdaten in Vorlagen speichern
- Daueraufträge nicht löschen
- beim parsen von DTAUS-Lastschriften kommt der Tctschlüssel in den VWZ
- echtes löschen von nicht mehr benötigten Daten
- Default-Werte aus Tabellen-Properties wurden nicht genommen
- Anzeige von Banken zur BLZ
- Im configdir eine Datei für globale Einstellungen (config.properties)
- Zahlungsarten fest in neue SQL-Init-Daten
- Standard-Konto und -Korb in SQL-Init-Daten
- DTAUS-Dateien dekodieren und zu Transaktionen wandeln
- bestimmte Zeichen (:.) im Verwendungszweck nicht erlaubt?!?
- Eurozeichen (DTAUS-Summe) nur angezeigt, wenn Browser-Encoding umgestellt
- Guten Platz für Passwörter finden
- properties-Dateien selber kommentieren
- Benutzung der Properties-Dateien dokumentieren
- spezifische Properties-Dateien für alle Einstellungen ermöglichen
- Fehler abfangen und besser darstellen
- Ausrichtung von Zahlen rechtsbündig
- Daten aus alter (Maypole-)Applikation übernehmen
- bei neuer Transaktion Korb vorbelegen
- blz gross schreiben
- nach löschen von Transaktionen zurück zum Ausgangskorb
- "Eing. bestätigen" ändern
- "editieren" -> "ändern"
- "Ausgangspool" korrigieren
- "Gutschrift" -> "Überweisung"
- Installation auf Laptop, dabei Doku prüfen
HBCI-Applikation
- Importieren der DTAUS-Dateien von Durst
- Versand von DTAUS (als "Pool")
- action senddtaus (hier kommt die Magie!)
- Umstellung des Tests bei Volksbank auf anderes Konto
Version 1.4
- Reorganisation der Paketnamen fertig zur Veröffentlichung
- view für Versand (action: show) mit Eingabe TAN etc.
- täglicher Restart vom Tomcat (zur Sicherheit)
- Erzeugung von DTAUS
- Verwaltung von DTAUS in einer Datenbank
- Eingabe von Transaktionen
- verschiedene Datenbanken für versch. Applikationen
- Überarbeitung der Datentabelle (Ergebniscode, Errorcode, versandt)
- Fehler in HBCI4Java: Umlaute brechen Strings ab :-(
- Kontoauszug-Layout mit Meyer abstimmen und optimieren
- Wenn Records mit BLOBs geändert werden, diese ggf. nicht ändern
- null als Wert bei Datum ermöglichen
- Binärdaten von der Weboberfläche unterstützt
- Binärdaten (BLOBs) in der Datenbank möglich
Version 1.3
- mehrere Banken
- HBCI-Ergebniscodes richtig ausgeben
- PIN/TAN-Verfahren
- Abruf und Anzeige von Kontoauszügen
- Native Library für Chipkarte nur einmal laden
- Grundlagen für HBCI
- Logging
- Dokumentation per Javadoc eingerichtet und überarbeitet
- Telefonbuch-Applikation
- Daten aktuell importieren
- Steuernummer suchen
- libs umkopieren in WEB-INF
Version 1.2
- Action-Klassen auslagern
- Datenfeld für Lieferstatus
- Freizeilen am Anfang der Ausgabe erforschen
- new-Action
- Zerlegen der edit-Action
- kompletter Test aller Actions
- kompletter Test des ganzen Systems
- nachdenken: Standard-Templates in Hauptverzeichnis?
- search-Action (z.B. für Link auf Betreuer)
- Einführen von View bzw. Themes
- "views", um anderes Template für gleichen Context zu benutzen
- show-action
- id nicht im query String kodieren, sondern in der uri
- urls richtig zusammensetzen
- createURI() weiterschreiben
- Klasse ServletDatabase komplett überarbeiten
- Umsortierung der Template-Dateien
- Kopie des Modells durch Javabean-Zugriff ersetzen/erleichtern
- logische Aufteilung der URL
- Erzeugen der Datenbank
Version 1.1
