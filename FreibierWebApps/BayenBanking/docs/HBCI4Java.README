HBCI4Java

Ich hatte einige Probleme bei der Konfiguration von HBCI4Java. Deshalb
dokumentiere ich hier einige Dinge:

Chipkarten-Treiber
------------------
Der Treiber ist eine native Linux-Bibliothek, die per JNI (Java Native 
Interface) eingebunden wird. Da gibt es eine Besonderheit: Es kann
in der Java-VM von Sun eine JNI-Bibliothek immer nur einmal geladen
sein. Das gibt leider ein Problem, wenn man beim Entwickeln eine 
Applikation neu in den Tomcat lädt, ohne diesen selber neu zu starten.
Die Lösung ist, die Bibliothek "hbci4java.jar" in das Verzeichnis 
"/var/lib/tomcat4/shared/lib/" zu kopieren, wodurch sie beim Tomcat-Start
(aber eben auch nur dann) automatisch eingebunden wird. Sie darf dann
natürlich nicht mehr in "web/WEB-INF/lib" stehen.


Verbindungsaufbau beim PinTan-Verfahren
---------------------------------------
Das PinTan-Verfahren benötigt eine SSL-Verbindung. Bei der Erzeugung
dieser gibt es offensichtlich einen Versionskonflikt zwischen dem 
JVM1.3-kompilierten Tomcat und meinem JVM1.4-kompilierten Programm. 
Deshalb wird im Banking-Servlet eine Property verstellt, dann geht's.


PinTan-Parameter
----------------
Die Passport-Datei kann man am besten mit dem Passport-Editor von 
HBCI4Java erzeugen, den man auf der HBCI4Java-Webseite bekommt. Als
Passwort zur Verschlüsselung der Passport-Datei benutze ich "banking".
(Dies sehe ich als ungefährlich an, da bei PinTan und DDV letztlich
keine wirklich geheimen Daten im Passport stehen).

Ich habe einiges herumprobieren müssen, bis ich die richtigen 
Parameter im Passport hatte. Deshalb hier meine Passport-Daten für 
die Volksbank Krefeld:
  Country-Code		DE
  BLZ				32060362
  Host				hbci-pintan.gad.de/cgi-bin/hbciservlet
  Port				443
  Filter			Base64
  User-ID			1002244
  Customer-ID		1002244014
  HBCI-Version		plus

Kommentare:
- Informationen zum host habe ich aus der Bankenliste auf 
  http://www.hbci.de. Beim host darf nicht "https://" vorne stehen 
  und es darf kein Port in der URI stehen.
- Der Filter sollte eigentlich immer "Base64" sein. Angeblich gibt
  es Ausnahmebanken, die hier "None" haben wollen.
- Die User-ID ist eine Zahl, die ich mir von der Volksbank sagen 
  lassen musste. Es ist meine dortige interne "Kundennummer", die
  in meinem Falle der Anfang meiner Kontonummer ist, was aber nicht
  unbedingt so sein muss.
- Die Customer-ID ist meine Konto-Nummer
- Wird die HBCI-Version nicht auf "plus" gestellt, gibt es gar kein
  PinTan, weil das offensichtlich erst in HBCI-plus eingeführt wurde

Erzeugung und Test von Passport-Dateien geht am allerbesten mit dem
Passport-Editor von HBCI4Java. Kann man die BPD (Bankdaten) empfangen,
ist das die halbe Miete, kann man die UPD (Benutzerdaten) empfangen,
hat man gewonnen, kann die Passport-Datei speichern und damit in 
meiner Webapplikation arbeiten.
